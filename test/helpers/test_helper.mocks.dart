// Mocks generated by Mockito 5.2.0 from annotations
// in cache_sample/test/helpers/test_helper.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:cache_sample/data/movie_repo.dart' as _i3;
import 'package:cache_sample/domain/movie_entity.dart' as _i5;
import 'package:cache_sample/domain/result.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeResource_0<T> extends _i1.Fake implements _i2.Resource<T> {}

/// A class which mocks [MovieRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepo extends _i1.Mock implements _i3.MovieRepo {
  MockMovieRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Resource<List<_i5.MovieEntity>>> getPlayingNowMovies() =>
      (super.noSuchMethod(Invocation.method(#getPlayingNowMovies, []),
              returnValue: Future<_i2.Resource<List<_i5.MovieEntity>>>.value(
                  _FakeResource_0<List<_i5.MovieEntity>>()))
          as _i4.Future<_i2.Resource<List<_i5.MovieEntity>>>);
}
